{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shade\\\\OneDrive\\\\Documents\\\\DevProject\\\\ecommerce-backend-API-master\\\\src\\\\ecommerce\\\\src\\\\components\\\\Cart\\\\cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./cart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    fetchCartItems();\n  }, []);\n  const fetchCartItems = async () => {\n    console.log(localStorage.token);\n    try {\n      const userResponse = await fetch(\"http://localhost:3000/api/v1/auth/user-data\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: localStorage.token\n        }\n      });\n      if (!userResponse.ok) {\n        console.error(\"Failed to retrieve user information.\");\n        return;\n      }\n      const userData = await userResponse.json();\n      const userId = userData.id;\n      const cartResponse = await fetch(`http://localhost:3000/api/v1/cart/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      });\n      if (cartResponse.ok) {\n        const cartData = await cartResponse.json();\n        const cartId = cartData[0].cart_id;\n        const cartItemsResponse = await fetch(`http://localhost:3000/api/v1/cartitem/${cartId}`);\n        if (cartItemsResponse.ok) {\n          const cartItemsData = await cartItemsResponse.json();\n          const quantityDict = {};\n          const updatedCartItems = cartItemsData.map(async cartItem => {\n            const productResponse = await fetch(`http://localhost:3000/api/v1/products/${cartItem.productid}`);\n            if (productResponse.ok) {\n              const productData = await productResponse.json();\n              return {\n                ...cartItem,\n                name: productData[0].name,\n                price: productData[0].price,\n                quantity: quantityDict[cartItem.productid] ? quantityDict[cartItem.productid] + cartItem.quantity : cartItem.quantity\n              };\n            } else {\n              console.error(`Failed to fetch product details for product ID ${cartItem.productid}.`);\n              return null;\n            }\n          });\n          const productDetails = await Promise.all(updatedCartItems);\n          const validProductDetails = productDetails.filter(productDetail => productDetail !== null);\n          setCartItems(validProductDetails);\n        } else {\n          console.error(\"Failed to fetch cart items.\", cartItemsResponse.statusText);\n        }\n      } else {\n        const createCartResponse = await fetch(\"http://localhost:3000/api/v1/cart\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`\n          }\n        });\n        if (createCartResponse.ok) {\n          const newCartData = await createCartResponse.json();\n          const newCartId = newCartData.cart_id;\n          const newCartItemsResponse = await fetch(`http://localhost:3000/api/v1/cartitem/${newCartId}`);\n          if (newCartItemsResponse.ok) {\n            const newCartItemsData = await newCartItemsResponse.json();\n            setCartItems(newCartItemsData);\n          } else {\n            console.error(\"Failed to fetch cart items for the new cart.\", newCartItemsResponse.statusText);\n          }\n        } else {\n          console.error(\"Failed to create or retrieve cart for the user.\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching cart:\", error);\n    }\n  };\n  const calculateTotal = () => {\n    return cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"cart-header\",\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"cart-list\",\n        children: cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"item-name\",\n          children: [cartItem.quantity, \" x \", cartItem.name, \" - $\", cartItem.price]\n        }, cartItem.cartitem_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"total\",\n        children: [\"Total: $\", calculateTotal()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"yMyLm0mTOdUD4xRL2vnEhQFbjeY=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Cart","_s","cartItems","setCartItems","fetchCartItems","console","log","localStorage","token","userResponse","fetch","method","headers","ok","error","userData","json","userId","id","cartResponse","Authorization","cartData","cartId","cart_id","cartItemsResponse","cartItemsData","quantityDict","updatedCartItems","map","cartItem","productResponse","productid","productData","name","price","quantity","productDetails","Promise","all","validProductDetails","filter","productDetail","statusText","createCartResponse","newCartData","newCartId","newCartItemsResponse","newCartItemsData","calculateTotal","reduce","total","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cartitem_id","_c","$RefreshReg$"],"sources":["C:/Users/shade/OneDrive/Documents/DevProject/ecommerce-backend-API-master/src/ecommerce/src/components/Cart/cart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./cart.css\";\r\n\r\nconst Cart = () => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCartItems();\r\n  }, []);\r\n\r\n  const fetchCartItems = async () => {\r\n    console.log(localStorage.token);\r\n    try {\r\n      const userResponse = await fetch(\r\n        \"http://localhost:3000/api/v1/auth/user-data\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            token: localStorage.token,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!userResponse.ok) {\r\n        console.error(\"Failed to retrieve user information.\");\r\n        return;\r\n      }\r\n\r\n      const userData = await userResponse.json();\r\n      const userId = userData.id;\r\n\r\n      const cartResponse = await fetch(\r\n        `http://localhost:3000/api/v1/cart/user/${userId}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (cartResponse.ok) {\r\n        const cartData = await cartResponse.json();\r\n        const cartId = cartData[0].cart_id;\r\n\r\n        const cartItemsResponse = await fetch(\r\n          `http://localhost:3000/api/v1/cartitem/${cartId}`\r\n        );\r\n\r\n        if (cartItemsResponse.ok) {\r\n          const cartItemsData = await cartItemsResponse.json();\r\n\r\n          const quantityDict = {};\r\n\r\n          const updatedCartItems = cartItemsData.map(async (cartItem) => {\r\n            const productResponse = await fetch(\r\n              `http://localhost:3000/api/v1/products/${cartItem.productid}`\r\n            );\r\n\r\n            if (productResponse.ok) {\r\n              const productData = await productResponse.json();\r\n              return {\r\n                ...cartItem,\r\n                name: productData[0].name,\r\n                price: productData[0].price,\r\n                quantity: quantityDict[cartItem.productid]\r\n                  ? quantityDict[cartItem.productid] + cartItem.quantity\r\n                  : cartItem.quantity,\r\n              };\r\n            } else {\r\n              console.error(\r\n                `Failed to fetch product details for product ID ${cartItem.productid}.`\r\n              );\r\n              return null;\r\n            }\r\n          });\r\n\r\n          const productDetails = await Promise.all(updatedCartItems);\r\n\r\n          const validProductDetails = productDetails.filter(\r\n            (productDetail) => productDetail !== null\r\n          );\r\n\r\n          setCartItems(validProductDetails);\r\n        } else {\r\n          console.error(\r\n            \"Failed to fetch cart items.\",\r\n            cartItemsResponse.statusText\r\n          );\r\n        }\r\n      } else {\r\n        const createCartResponse = await fetch(\r\n          \"http://localhost:3000/api/v1/cart\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        if (createCartResponse.ok) {\r\n          const newCartData = await createCartResponse.json();\r\n          const newCartId = newCartData.cart_id;\r\n\r\n          const newCartItemsResponse = await fetch(\r\n            `http://localhost:3000/api/v1/cartitem/${newCartId}`\r\n          );\r\n\r\n          if (newCartItemsResponse.ok) {\r\n            const newCartItemsData = await newCartItemsResponse.json();\r\n            setCartItems(newCartItemsData);\r\n          } else {\r\n            console.error(\r\n              \"Failed to fetch cart items for the new cart.\",\r\n              newCartItemsResponse.statusText\r\n            );\r\n          }\r\n        } else {\r\n          console.error(\"Failed to create or retrieve cart for the user.\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching cart:\", error);\r\n    }\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    return cartItems.reduce(\r\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\r\n      0\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-wrapper\">\r\n      <div className=\"cart-container\">\r\n        <h2 className=\"cart-header\">Shopping Cart</h2>\r\n        <ul className=\"cart-list\">\r\n          {cartItems.map((cartItem) => (\r\n            <li className=\"item-name\" key={cartItem.cartitem_id}>\r\n              {cartItem.quantity} x {cartItem.name} - ${cartItem.price}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"total\">Total: ${calculateTotal()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdO,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCC,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,KAAK,CAAC;IAC/B,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAC9B,6CAA6C,EAC7C;QACEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCJ,KAAK,EAAED,YAAY,CAACC;QACtB;MACF,CACF,CAAC;MAED,IAAI,CAACC,YAAY,CAACI,EAAE,EAAE;QACpBR,OAAO,CAACS,KAAK,CAAC,sCAAsC,CAAC;QACrD;MACF;MAEA,MAAMC,QAAQ,GAAG,MAAMN,YAAY,CAACO,IAAI,CAAC,CAAC;MAC1C,MAAMC,MAAM,GAAGF,QAAQ,CAACG,EAAE;MAE1B,MAAMC,YAAY,GAAG,MAAMT,KAAK,CAC7B,0CAAyCO,MAAO,EAAC,EAClD;QACEN,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCQ,aAAa,EAAG,UAASb,YAAY,CAACC,KAAM;QAC9C;MACF,CACF,CAAC;MAED,IAAIW,YAAY,CAACN,EAAE,EAAE;QACnB,MAAMQ,QAAQ,GAAG,MAAMF,YAAY,CAACH,IAAI,CAAC,CAAC;QAC1C,MAAMM,MAAM,GAAGD,QAAQ,CAAC,CAAC,CAAC,CAACE,OAAO;QAElC,MAAMC,iBAAiB,GAAG,MAAMd,KAAK,CAClC,yCAAwCY,MAAO,EAClD,CAAC;QAED,IAAIE,iBAAiB,CAACX,EAAE,EAAE;UACxB,MAAMY,aAAa,GAAG,MAAMD,iBAAiB,CAACR,IAAI,CAAC,CAAC;UAEpD,MAAMU,YAAY,GAAG,CAAC,CAAC;UAEvB,MAAMC,gBAAgB,GAAGF,aAAa,CAACG,GAAG,CAAC,MAAOC,QAAQ,IAAK;YAC7D,MAAMC,eAAe,GAAG,MAAMpB,KAAK,CAChC,yCAAwCmB,QAAQ,CAACE,SAAU,EAC9D,CAAC;YAED,IAAID,eAAe,CAACjB,EAAE,EAAE;cACtB,MAAMmB,WAAW,GAAG,MAAMF,eAAe,CAACd,IAAI,CAAC,CAAC;cAChD,OAAO;gBACL,GAAGa,QAAQ;gBACXI,IAAI,EAAED,WAAW,CAAC,CAAC,CAAC,CAACC,IAAI;gBACzBC,KAAK,EAAEF,WAAW,CAAC,CAAC,CAAC,CAACE,KAAK;gBAC3BC,QAAQ,EAAET,YAAY,CAACG,QAAQ,CAACE,SAAS,CAAC,GACtCL,YAAY,CAACG,QAAQ,CAACE,SAAS,CAAC,GAAGF,QAAQ,CAACM,QAAQ,GACpDN,QAAQ,CAACM;cACf,CAAC;YACH,CAAC,MAAM;cACL9B,OAAO,CAACS,KAAK,CACV,kDAAiDe,QAAQ,CAACE,SAAU,GACvE,CAAC;cACD,OAAO,IAAI;YACb;UACF,CAAC,CAAC;UAEF,MAAMK,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACX,gBAAgB,CAAC;UAE1D,MAAMY,mBAAmB,GAAGH,cAAc,CAACI,MAAM,CAC9CC,aAAa,IAAKA,aAAa,KAAK,IACvC,CAAC;UAEDtC,YAAY,CAACoC,mBAAmB,CAAC;QACnC,CAAC,MAAM;UACLlC,OAAO,CAACS,KAAK,CACX,6BAA6B,EAC7BU,iBAAiB,CAACkB,UACpB,CAAC;QACH;MACF,CAAC,MAAM;QACL,MAAMC,kBAAkB,GAAG,MAAMjC,KAAK,CACpC,mCAAmC,EACnC;UACEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCQ,aAAa,EAAG,UAASb,YAAY,CAACC,KAAM;UAC9C;QACF,CACF,CAAC;QAED,IAAImC,kBAAkB,CAAC9B,EAAE,EAAE;UACzB,MAAM+B,WAAW,GAAG,MAAMD,kBAAkB,CAAC3B,IAAI,CAAC,CAAC;UACnD,MAAM6B,SAAS,GAAGD,WAAW,CAACrB,OAAO;UAErC,MAAMuB,oBAAoB,GAAG,MAAMpC,KAAK,CACrC,yCAAwCmC,SAAU,EACrD,CAAC;UAED,IAAIC,oBAAoB,CAACjC,EAAE,EAAE;YAC3B,MAAMkC,gBAAgB,GAAG,MAAMD,oBAAoB,CAAC9B,IAAI,CAAC,CAAC;YAC1Db,YAAY,CAAC4C,gBAAgB,CAAC;UAChC,CAAC,MAAM;YACL1C,OAAO,CAACS,KAAK,CACX,8CAA8C,EAC9CgC,oBAAoB,CAACJ,UACvB,CAAC;UACH;QACF,CAAC,MAAM;UACLrC,OAAO,CAACS,KAAK,CAAC,iDAAiD,CAAC;QAClE;MACF;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMkC,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAO9C,SAAS,CAAC+C,MAAM,CACrB,CAACC,KAAK,EAAErB,QAAQ,KAAKqB,KAAK,GAAGrB,QAAQ,CAACM,QAAQ,GAAGN,QAAQ,CAACK,KAAK,EAC/D,CACF,CAAC;EACH,CAAC;EAED,oBACEnC,OAAA;IAAKoD,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BrD,OAAA;MAAKoD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BrD,OAAA;QAAIoD,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9CzD,OAAA;QAAIoD,SAAS,EAAC,WAAW;QAAAC,QAAA,EACtBlD,SAAS,CAAC0B,GAAG,CAAEC,QAAQ,iBACtB9B,OAAA;UAAIoD,SAAS,EAAC,WAAW;UAAAC,QAAA,GACtBvB,QAAQ,CAACM,QAAQ,EAAC,KAAG,EAACN,QAAQ,CAACI,IAAI,EAAC,MAAI,EAACJ,QAAQ,CAACK,KAAK;QAAA,GAD3BL,QAAQ,CAAC4B,WAAW;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE/C,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLzD,OAAA;QAAGoD,SAAS,EAAC,OAAO;QAAAC,QAAA,GAAC,UAAQ,EAACJ,cAAc,CAAC,CAAC;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvD,EAAA,CArJID,IAAI;AAAA0D,EAAA,GAAJ1D,IAAI;AAuJV,eAAeA,IAAI;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}