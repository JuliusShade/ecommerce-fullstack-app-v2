{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shade\\\\OneDrive\\\\Documents\\\\DevProject\\\\ecommerce-backend-API-master\\\\src\\\\ecommerce\\\\src\\\\components\\\\ProductList\\\\Item.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Cart, refreshCart, fetchCartItems } from \"../Cart/cart.js\";\nimport \"./item.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemList = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/v1/products\").then(response => response.json()).then(data => {\n      setItems(data);\n    }).catch(error => console.error(\"Error fetching items:\", error));\n  }, []);\n  const handleAddToCart = async productId => {\n    console.log(\"Adding product to cart:\", productId);\n    try {\n      const userResponse = await fetch(\"http://localhost:3000/api/v1/auth/user-data\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: localStorage.token\n        }\n      });\n      if (!userResponse.ok) {\n        console.error(\"Failed to retrieve user information.\");\n        return;\n      }\n      const userData = await userResponse.json();\n      const userId = userData.id;\n      const checkCartResponse = await fetch(`http://localhost:3000/api/v1/cart/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      });\n      if (checkCartResponse.ok) {\n        var _existingCartData$;\n        const existingCartData = await checkCartResponse.json();\n        const existingCartId = (_existingCartData$ = existingCartData[0]) === null || _existingCartData$ === void 0 ? void 0 : _existingCartData$.cart_id;\n        const addToCartResponse = await fetch(`http://localhost:3000/api/v1/cartitem`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`\n          },\n          body: JSON.stringify({\n            cart_id: existingCartId,\n            productid: productId,\n            user_id: userId\n          })\n        });\n        if (addToCartResponse.ok) {\n          // Update the local state first\n          const updatedItems = await fetchCartItems(setCartItems);\n          setCartItems(updatedItems);\n\n          // Then, refresh the cart in real-time\n          await refreshCart({\n            setCartItems\n          });\n          console.log(\"Product added to cart successfully!\");\n        } else {\n          console.error(\"Failed to add product to cart.\");\n        }\n      } else {\n        // ... (same as your existing code)\n      }\n    } catch (error) {\n      console.error(\"Error adding product to cart:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"products-header\",\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"item-name\",\n            children: [item.name, \" | \", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-description\",\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddToCart(item.productid),\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, item.productid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {\n      setCartItems: setCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemList, \"AsueRV375l4qKKypklgcaK43Alk=\");\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","useState","useEffect","Cart","refreshCart","fetchCartItems","jsxDEV","_jsxDEV","ItemList","_s","items","setItems","cartItems","setCartItems","fetch","then","response","json","data","catch","error","console","handleAddToCart","productId","log","userResponse","method","headers","token","localStorage","ok","userData","userId","id","checkCartResponse","Authorization","_existingCartData$","existingCartData","existingCartId","cart_id","addToCartResponse","body","JSON","stringify","productid","user_id","updatedItems","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","price","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shade/OneDrive/Documents/DevProject/ecommerce-backend-API-master/src/ecommerce/src/components/ProductList/Item.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Cart, refreshCart, fetchCartItems } from \"../Cart/cart.js\";\r\nimport \"./item.css\";\r\n\r\nconst ItemList = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3000/api/v1/products\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setItems(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching items:\", error));\r\n  }, []);\r\n\r\n  const handleAddToCart = async (productId) => {\r\n    console.log(\"Adding product to cart:\", productId);\r\n    try {\r\n      const userResponse = await fetch(\r\n        \"http://localhost:3000/api/v1/auth/user-data\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            token: localStorage.token,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!userResponse.ok) {\r\n        console.error(\"Failed to retrieve user information.\");\r\n        return;\r\n      }\r\n\r\n      const userData = await userResponse.json();\r\n      const userId = userData.id;\r\n\r\n      const checkCartResponse = await fetch(\r\n        `http://localhost:3000/api/v1/cart/user/${userId}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (checkCartResponse.ok) {\r\n        const existingCartData = await checkCartResponse.json();\r\n        const existingCartId = existingCartData[0]?.cart_id;\r\n\r\n        const addToCartResponse = await fetch(\r\n          `http://localhost:3000/api/v1/cartitem`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.token}`,\r\n            },\r\n            body: JSON.stringify({\r\n              cart_id: existingCartId,\r\n              productid: productId,\r\n              user_id: userId,\r\n            }),\r\n          }\r\n        );\r\n\r\n        if (addToCartResponse.ok) {\r\n          // Update the local state first\r\n          const updatedItems = await fetchCartItems(setCartItems);\r\n          setCartItems(updatedItems);\r\n\r\n          // Then, refresh the cart in real-time\r\n          await refreshCart({ setCartItems });\r\n          console.log(\"Product added to cart successfully!\");\r\n        } else {\r\n          console.error(\"Failed to add product to cart.\");\r\n        }\r\n      } else {\r\n        // ... (same as your existing code)\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding product to cart:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"item-list-container\">\r\n      <h2 className=\"products-header\">Products</h2>\r\n      <ul>\r\n        {items.map((item) => (\r\n          <li key={item.productid} className=\"item\">\r\n            <div>\r\n              <h3 className=\"item-name\">\r\n                {item.name} | {item.price}\r\n              </h3>\r\n              <p className=\"item-description\">{item.description}</p>\r\n              <button onClick={() => handleAddToCart(item.productid)}>\r\n                Add to Cart\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Cart setCartItems={setCartItems} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}