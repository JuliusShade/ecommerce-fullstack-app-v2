{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shade\\\\OneDrive\\\\Documents\\\\DevProject\\\\ecommerce-backend-API-master\\\\src\\\\ecommerce\\\\src\\\\components\\\\ProductList\\\\Item.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Cart, refreshCart, fetchCartItems } from \"../Cart/cart.js\";\nimport \"./item.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemList = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const updateCart = newCartItems => {\n    setCartItems(newCartItems);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch products\n        const productsResponse = await fetch(\"http://localhost:3000/api/v1/products\");\n        const productsData = await productsResponse.json();\n        setItems(productsData);\n\n        // Fetch cart items\n        const cartItemsData = await fetchCartItems(setCartItems);\n        setCartItems(cartItemsData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddToCart = async productId => {\n    console.log(\"Adding product to cart:\", productId);\n    try {\n      const userResponse = await fetch(\"http://localhost:3000/api/v1/auth/user-data\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: localStorage.token\n        }\n      });\n      if (!userResponse.ok) {\n        console.error(\"Failed to retrieve user information.\");\n        return;\n      }\n      const userData = await userResponse.json();\n      const userId = userData.id;\n      const checkCartResponse = await fetch(`http://localhost:3000/api/v1/cart/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      });\n      if (checkCartResponse.ok) {\n        var _existingCartData$;\n        const existingCartData = await checkCartResponse.json();\n        const existingCartId = (_existingCartData$ = existingCartData[0]) === null || _existingCartData$ === void 0 ? void 0 : _existingCartData$.cart_id;\n        const addToCartResponse = await fetch(`http://localhost:3000/api/v1/cartitem`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`\n          },\n          body: JSON.stringify({\n            cart_id: existingCartId,\n            productid: productId,\n            user_id: userId\n          })\n        });\n        if (addToCartResponse.ok) {\n          console.log(\"Product added to cart successfully!\");\n\n          // Refresh the cart in real-time\n          await refreshCart({\n            setCartItems\n          });\n        } else {\n          console.error(\"Failed to add product to cart.\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error adding product to cart:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"products-header\",\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"item-list\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"item-name\",\n            children: [item.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"item-price\",\n              children: [\"| $\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-description\",\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddToCart(item.productid),\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, item.productid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {\n      cartItems: cartItems,\n      updateCartItems: setCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemList, \"AsueRV375l4qKKypklgcaK43Alk=\");\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","useState","useEffect","Cart","refreshCart","fetchCartItems","jsxDEV","_jsxDEV","ItemList","_s","items","setItems","cartItems","setCartItems","updateCart","newCartItems","fetchData","productsResponse","fetch","productsData","json","cartItemsData","error","console","handleAddToCart","productId","log","userResponse","method","headers","token","localStorage","ok","userData","userId","id","checkCartResponse","Authorization","_existingCartData$","existingCartData","existingCartId","cart_id","addToCartResponse","body","JSON","stringify","productid","user_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","price","description","onClick","updateCartItems","_c","$RefreshReg$"],"sources":["C:/Users/shade/OneDrive/Documents/DevProject/ecommerce-backend-API-master/src/ecommerce/src/components/ProductList/Item.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Cart, refreshCart, fetchCartItems } from \"../Cart/cart.js\";\r\nimport \"./item.css\";\r\n\r\nconst ItemList = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const updateCart = (newCartItems) => {\r\n    setCartItems(newCartItems);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch products\r\n        const productsResponse = await fetch(\r\n          \"http://localhost:3000/api/v1/products\"\r\n        );\r\n        const productsData = await productsResponse.json();\r\n        setItems(productsData);\r\n\r\n        // Fetch cart items\r\n        const cartItemsData = await fetchCartItems(setCartItems);\r\n        setCartItems(cartItemsData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleAddToCart = async (productId) => {\r\n    console.log(\"Adding product to cart:\", productId);\r\n    try {\r\n      const userResponse = await fetch(\r\n        \"http://localhost:3000/api/v1/auth/user-data\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            token: localStorage.token,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!userResponse.ok) {\r\n        console.error(\"Failed to retrieve user information.\");\r\n        return;\r\n      }\r\n\r\n      const userData = await userResponse.json();\r\n      const userId = userData.id;\r\n\r\n      const checkCartResponse = await fetch(\r\n        `http://localhost:3000/api/v1/cart/user/${userId}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (checkCartResponse.ok) {\r\n        const existingCartData = await checkCartResponse.json();\r\n        const existingCartId = existingCartData[0]?.cart_id;\r\n\r\n        const addToCartResponse = await fetch(\r\n          `http://localhost:3000/api/v1/cartitem`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.token}`,\r\n            },\r\n            body: JSON.stringify({\r\n              cart_id: existingCartId,\r\n              productid: productId,\r\n              user_id: userId,\r\n            }),\r\n          }\r\n        );\r\n\r\n        if (addToCartResponse.ok) {\r\n          console.log(\"Product added to cart successfully!\");\r\n\r\n          // Refresh the cart in real-time\r\n          await refreshCart({ setCartItems });\r\n        } else {\r\n          console.error(\"Failed to add product to cart.\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding product to cart:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"item-list-container\">\r\n      <h2 className=\"products-header\">Products</h2>\r\n      <ul className=\"item-list\">\r\n        {items.map((item) => (\r\n          <li key={item.productid} className=\"item\">\r\n            <div className=\"item-content\">\r\n              <h3 className=\"item-name\">\r\n                {item.name} <span className=\"item-price\">| ${item.price}</span>\r\n              </h3>\r\n              <p className=\"item-description\">{item.description}</p>\r\n              <button onClick={() => handleAddToCart(item.productid)}>\r\n                Add to Cart\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Cart cartItems={cartItems} updateCartItems={setCartItems} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}