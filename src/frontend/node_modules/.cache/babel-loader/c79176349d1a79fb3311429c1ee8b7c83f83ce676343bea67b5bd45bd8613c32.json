{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shade\\\\OneDrive\\\\Documents\\\\DevProject\\\\ecommerce-fullstack-app-master\\\\src\\\\frontend\\\\src\\\\components\\\\Login\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GoogleLogin, googleLogout } from \"@react-oauth/google\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = process.env.GOOGLE_CLIENT_ID;\nexport const LoginGoogle = ({\n  setAuth\n}) => {\n  const onSuccess = async googleData => {\n    try {\n      console.log(\"Google data received on client:\", googleData);\n      const {\n        credential\n      } = googleData;\n      const response = await fetch(`https://${process.env.REACT_APP_GOOGLE_CLIENT_ID}/api/v1/auth/oauth/google`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          access_token: credential\n        }) // Send the ID token as access_token\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const parseRes = await response.json();\n      localStorage.setItem(\"token\", parseRes.token);\n      setAuth(true);\n    } catch (err) {\n      console.error(\"Error during login: \", err);\n      alert(\"Failed to log in with Google.\"); // Alert the user of a failed Google login\n    }\n  };\n\n  const onFailure = res => {\n    console.log(\"LOGIN FAILED! Response: \", res);\n    alert(\"Google login failed. Please try again.\"); // Alert the user of a failed Google login\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"signInButton\",\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Login\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      cookiePolicy: \"single_host_origin\",\n      isSignedIn: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginGoogle;\nexport const Login = ({\n  setAuth\n}) => {\n  _s();\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\"); // State to hold the error message\n\n  const {\n    email,\n    password\n  } = inputs;\n  const onChange = e => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = {\n        email,\n        password\n      };\n      const response = await fetch(`https://${process.env.REACT_APP_HOST_NAME}/api/v1/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      if (!response.ok) {\n        // If the credentials are invalid, show an error message\n        setErrorMessage(\"Invalid Login Credentials\");\n        alert(\"Invalid Login Credentials\"); // Using an alert for simplicity\n      } else {\n        localStorage.setItem(\"token\", parseRes.token);\n        setAuth(true);\n      }\n    } catch (err) {\n      console.error(err.message);\n      setErrorMessage(err.message);\n      alert(err.message); // Show the error message as an alert\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmitForm,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Username\",\n            value: email,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        className: \"register-link\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-auth\",\n        children: /*#__PURE__*/_jsxDEV(LoginGoogle, {\n          setAuth: setAuth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"K3ieB3INXgLFV2S4U6luyde/3lY=\");\n_c2 = Login;\nexport default Login;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginGoogle\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"names":["React","useState","Link","GoogleLogin","googleLogout","jsxDEV","_jsxDEV","clientId","process","env","GOOGLE_CLIENT_ID","LoginGoogle","setAuth","onSuccess","googleData","console","log","credential","response","fetch","REACT_APP_GOOGLE_CLIENT_ID","method","headers","body","JSON","stringify","access_token","ok","Error","status","parseRes","json","localStorage","setItem","token","err","error","alert","onFailure","res","id","children","buttonText","cookiePolicy","isSignedIn","fileName","_jsxFileName","lineNumber","columnNumber","_c","Login","_s","inputs","setInputs","email","password","errorMessage","setErrorMessage","onChange","e","target","name","value","onSubmitForm","preventDefault","REACT_APP_HOST_NAME","message","className","onSubmit","type","placeholder","required","to","_c2","$RefreshReg$"],"sources":["C:/Users/shade/OneDrive/Documents/DevProject/ecommerce-fullstack-app-master/src/frontend/src/components/Login/login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GoogleLogin, googleLogout } from \"@react-oauth/google\";\nimport \"./login.css\";\n\nconst clientId = process.env.GOOGLE_CLIENT_ID;\n\nexport const LoginGoogle = ({ setAuth }) => {\n  const onSuccess = async (googleData) => {\n    try {\n      console.log(\"Google data received on client:\", googleData);\n      const { credential } = googleData;\n\n      const response = await fetch(\n        `https://${process.env.REACT_APP_GOOGLE_CLIENT_ID}/api/v1/auth/oauth/google`,\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ access_token: credential }), // Send the ID token as access_token\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const parseRes = await response.json();\n\n      localStorage.setItem(\"token\", parseRes.token);\n      setAuth(true);\n    } catch (err) {\n      console.error(\"Error during login: \", err);\n      alert(\"Failed to log in with Google.\"); // Alert the user of a failed Google login\n    }\n  };\n\n  const onFailure = (res) => {\n    console.log(\"LOGIN FAILED! Response: \", res);\n    alert(\"Google login failed. Please try again.\"); // Alert the user of a failed Google login\n  };\n\n  return (\n    <div id=\"signInButton\">\n      <GoogleLogin\n        clientId={clientId}\n        buttonText=\"Login\"\n        onSuccess={onSuccess}\n        onFailure={onFailure}\n        cookiePolicy={\"single_host_origin\"}\n        isSignedIn={false}\n      />\n    </div>\n  );\n};\n\nexport const Login = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\"); // State to hold the error message\n\n  const { email, password } = inputs;\n\n  const onChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { email, password };\n\n      const response = await fetch(\n        `https://${process.env.REACT_APP_HOST_NAME}/api/v1/auth/login`,\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(body),\n        }\n      );\n\n      const parseRes = await response.json();\n\n      if (!response.ok) {\n        // If the credentials are invalid, show an error message\n        setErrorMessage(\"Invalid Login Credentials\");\n        alert(\"Invalid Login Credentials\"); // Using an alert for simplicity\n      } else {\n        localStorage.setItem(\"token\", parseRes.token);\n        setAuth(true);\n      }\n    } catch (err) {\n      console.error(err.message);\n      setErrorMessage(err.message);\n      alert(err.message); // Show the error message as an alert\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-container\">\n        <h1>User Login</h1>\n        <form onSubmit={onSubmitForm} className=\"login-form\">\n          <div className=\"input-group\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Username\"\n              value={email}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"input-group\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"login-button\">\n            Login\n          </button>\n        </form>\n        <Link to=\"/register\" className=\"register-link\">\n          Register\n        </Link>\n        <div className=\"google-auth\">\n          <LoginGoogle setAuth={setAuth} />\n        </div>\n        {/* Display error message if there is one */}\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,EAAEC,YAAY,QAAQ,qBAAqB;AAC/D,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,gBAAgB;AAE7C,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC1C,MAAMC,SAAS,GAAG,MAAOC,UAAU,IAAK;IACtC,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,UAAU,CAAC;MAC1D,MAAM;QAAEG;MAAW,CAAC,GAAGH,UAAU;MAEjC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CACzB,WAAUX,OAAO,CAACC,GAAG,CAACW,0BAA2B,2BAA0B,EAC5E;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,YAAY,EAAET;QAAW,CAAC,CAAC,CAAE;MACtD,CACF,CAAC;;MAED,IAAI,CAACC,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBV,QAAQ,CAACW,MAAO,EAAC,CAAC;MAC3D;MAEA,MAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAEtCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,KAAK,CAAC;MAC7CtB,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZpB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAED,GAAG,CAAC;MAC1CE,KAAK,CAAC,+BAA+B,CAAC,CAAC,CAAC;IAC1C;EACF,CAAC;;EAED,MAAMC,SAAS,GAAIC,GAAG,IAAK;IACzBxB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEuB,GAAG,CAAC;IAC5CF,KAAK,CAAC,wCAAwC,CAAC,CAAC,CAAC;EACnD,CAAC;;EAED,oBACE/B,OAAA;IAAKkC,EAAE,EAAC,cAAc;IAAAC,QAAA,eACpBnC,OAAA,CAACH,WAAW;MACVI,QAAQ,EAAEA,QAAS;MACnBmC,UAAU,EAAC,OAAO;MAClB7B,SAAS,EAAEA,SAAU;MACrByB,SAAS,EAAEA,SAAU;MACrBK,YAAY,EAAE,oBAAqB;MACnCC,UAAU,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA9CWtC,WAAW;AAgDxB,OAAO,MAAMuC,KAAK,GAAGA,CAAC;EAAEtC;AAAQ,CAAC,KAAK;EAAAuC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGpD,QAAQ,CAAC;IACnCqD,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD,MAAM;IAAEqD,KAAK;IAAEC;EAAS,CAAC,GAAGH,MAAM;EAElC,MAAMM,QAAQ,GAAIC,CAAC,IAAK;IACtBN,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAACO,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMzC,IAAI,GAAG;QAAE+B,KAAK;QAAEC;MAAS,CAAC;MAEhC,MAAMrC,QAAQ,GAAG,MAAMC,KAAK,CACzB,WAAUX,OAAO,CAACC,GAAG,CAACwD,mBAAoB,oBAAmB,EAC9D;QACE5C,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI;MAC3B,CACF,CAAC;MAED,MAAMO,QAAQ,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAEtC,IAAI,CAACb,QAAQ,CAACS,EAAE,EAAE;QAChB;QACA8B,eAAe,CAAC,2BAA2B,CAAC;QAC5CpB,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;MACtC,CAAC,MAAM;QACLL,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,KAAK,CAAC;QAC7CtB,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZpB,OAAO,CAACqB,KAAK,CAACD,GAAG,CAAC+B,OAAO,CAAC;MAC1BT,eAAe,CAACtB,GAAG,CAAC+B,OAAO,CAAC;MAC5B7B,KAAK,CAACF,GAAG,CAAC+B,OAAO,CAAC,CAAC,CAAC;IACtB;EACF,CAAC;;EAED,oBACE5D,OAAA;IAAK6D,SAAS,EAAC,YAAY;IAAA1B,QAAA,eACzBnC,OAAA;MAAK6D,SAAS,EAAC,iBAAiB;MAAA1B,QAAA,gBAC9BnC,OAAA;QAAAmC,QAAA,EAAI;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnB1C,OAAA;QAAM8D,QAAQ,EAAEL,YAAa;QAACI,SAAS,EAAC,YAAY;QAAA1B,QAAA,gBAClDnC,OAAA;UAAK6D,SAAS,EAAC,aAAa;UAAA1B,QAAA,eAC1BnC,OAAA;YACE+D,IAAI,EAAC,OAAO;YACZR,IAAI,EAAC,OAAO;YACZS,WAAW,EAAC,UAAU;YACtBR,KAAK,EAAER,KAAM;YACbI,QAAQ,EAAEA,QAAS;YACnBa,QAAQ;UAAA;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN1C,OAAA;UAAK6D,SAAS,EAAC,aAAa;UAAA1B,QAAA,eAC1BnC,OAAA;YACE+D,IAAI,EAAC,UAAU;YACfR,IAAI,EAAC,UAAU;YACfS,WAAW,EAAC,UAAU;YACtBR,KAAK,EAAEP,QAAS;YAChBG,QAAQ,EAAEA,QAAS;YACnBa,QAAQ;UAAA;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN1C,OAAA;UAAQ+D,IAAI,EAAC,QAAQ;UAACF,SAAS,EAAC,cAAc;UAAA1B,QAAA,EAAC;QAE/C;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACP1C,OAAA,CAACJ,IAAI;QAACsE,EAAE,EAAC,WAAW;QAACL,SAAS,EAAC,eAAe;QAAA1B,QAAA,EAAC;MAE/C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACP1C,OAAA;QAAK6D,SAAS,EAAC,aAAa;QAAA1B,QAAA,eAC1BnC,OAAA,CAACK,WAAW;UAACC,OAAO,EAAEA;QAAQ;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,EAELQ,YAAY,iBAAIlD,OAAA;QAAK6D,SAAS,EAAC,eAAe;QAAA1B,QAAA,EAAEe;MAAY;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,CApFWD,KAAK;AAAAuB,GAAA,GAALvB,KAAK;AAsFlB,eAAeA,KAAK;AAAC,IAAAD,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}