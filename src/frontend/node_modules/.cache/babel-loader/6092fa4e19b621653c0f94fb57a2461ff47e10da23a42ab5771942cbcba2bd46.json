{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shade\\\\OneDrive\\\\Documents\\\\DevProject\\\\ecommerce-backend-API-master\\\\src\\\\ecommerce\\\\src\\\\components\\\\ProductList\\\\Item.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Cart, fetchCartItems, refreshCart } from \"../Cart/cart.js\";\nimport \"./item.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemList = ({\n  setCartItems\n}) => {\n  _s();\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/v1/products\").then(response => response.json()).then(data => {\n      setItems(data);\n    }).catch(error => console.error(\"Error fetching items:\", error));\n  }, []); // Empty dependency array to run the effect only once\n\n  const handleAddToCart = async (productId, onCartUpdate) => {\n    console.log(\"Adding product to cart:\", productId);\n    try {\n      const userResponse = await fetch(\"http://localhost:3000/api/v1/auth/user-data\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: localStorage.token\n        }\n      });\n      if (!userResponse.ok) {\n        console.error(\"Failed to retrieve user information.\");\n        return;\n      }\n      const userData = await userResponse.json();\n      const userId = userData.id;\n      const checkCartResponse = await fetch(`http://localhost:3000/api/v1/cart/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      });\n      if (checkCartResponse.ok) {\n        const existingCartData = await checkCartResponse.json();\n        console.log(existingCartData);\n        const existingCartId = existingCartData[0].cart_id;\n        const addToCartResponse = await fetch(`http://localhost:3000/api/v1/cartitem`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`\n          },\n          body: JSON.stringify({\n            cart_id: existingCartId,\n            productid: productId,\n            user_id: userId\n          })\n        });\n        if (addToCartResponse.ok) {\n          console.log(\"Product added to cart successfully!\");\n\n          // Fetch updated cart items before updating the Cart component\n          const updatedItems = await fetchCartItems(setCartItems);\n\n          // Notify the parent component about the cart update\n          if (typeof onCartUpdate === \"function\") {\n            onCartUpdate(updatedItems);\n          }\n        } else {\n          console.error(\"Failed to add product to cart.\");\n        }\n      } else {\n        const createCartResponse = await fetch(\"http://localhost:3000/api/v1/cart\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`\n          }\n        });\n        if (createCartResponse.ok) {\n          const newCartData = await createCartResponse.json();\n          const newCartId = newCartData.cart_id;\n          const addToNewCartResponse = await fetch(`http://localhost:3000/api/v1/cartitem`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${localStorage.token}`\n            },\n            body: JSON.stringify({\n              cart_id: newCartId,\n              productid: productId,\n              user_id: userId\n            })\n          });\n          if (addToNewCartResponse.ok) {\n            console.log(\"Product added to cart successfully!\");\n\n            // Fetch updated cart items before updating the Cart component\n            const updatedItems = await fetchCartItems(setCartItems);\n\n            // Notify the parent component about the cart update\n            if (typeof onCartUpdate === \"function\") {\n              onCartUpdate(updatedItems);\n            }\n          } else {\n            console.error(\"Failed to add product to cart.\");\n          }\n        } else {\n          console.error(\"Failed to create or retrieve cart.\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error adding product to cart:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"products-header\",\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"item-name\",\n            children: [item.name, \" | \", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-description\",\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddToCart(item.productid, onCartUpdate),\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, item.productid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {\n      setCartItems: setCartItems,\n      onCartUpdate: updatedItems => setCartItems(updatedItems)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","useState","useEffect","Cart","fetchCartItems","refreshCart","jsxDEV","_jsxDEV","ItemList","setCartItems","_s","items","setItems","fetch","then","response","json","data","catch","error","console","handleAddToCart","productId","onCartUpdate","log","userResponse","method","headers","token","localStorage","ok","userData","userId","id","checkCartResponse","Authorization","existingCartData","existingCartId","cart_id","addToCartResponse","body","JSON","stringify","productid","user_id","updatedItems","createCartResponse","newCartData","newCartId","addToNewCartResponse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","price","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shade/OneDrive/Documents/DevProject/ecommerce-backend-API-master/src/ecommerce/src/components/ProductList/Item.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Cart, fetchCartItems, refreshCart } from \"../Cart/cart.js\";\r\nimport \"./item.css\";\r\n\r\nconst ItemList = ({ setCartItems }) => {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3000/api/v1/products\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setItems(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching items:\", error));\r\n  }, []); // Empty dependency array to run the effect only once\r\n\r\n  const handleAddToCart = async (productId, onCartUpdate) => {\r\n    console.log(\"Adding product to cart:\", productId);\r\n    try {\r\n      const userResponse = await fetch(\r\n        \"http://localhost:3000/api/v1/auth/user-data\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            token: localStorage.token,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (!userResponse.ok) {\r\n        console.error(\"Failed to retrieve user information.\");\r\n        return;\r\n      }\r\n\r\n      const userData = await userResponse.json();\r\n      const userId = userData.id;\r\n\r\n      const checkCartResponse = await fetch(\r\n        `http://localhost:3000/api/v1/cart/user/${userId}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (checkCartResponse.ok) {\r\n        const existingCartData = await checkCartResponse.json();\r\n        console.log(existingCartData);\r\n\r\n        const existingCartId = existingCartData[0].cart_id;\r\n\r\n        const addToCartResponse = await fetch(\r\n          `http://localhost:3000/api/v1/cartitem`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.token}`,\r\n            },\r\n            body: JSON.stringify({\r\n              cart_id: existingCartId,\r\n              productid: productId,\r\n              user_id: userId,\r\n            }),\r\n          }\r\n        );\r\n\r\n        if (addToCartResponse.ok) {\r\n          console.log(\"Product added to cart successfully!\");\r\n\r\n          // Fetch updated cart items before updating the Cart component\r\n          const updatedItems = await fetchCartItems(setCartItems);\r\n\r\n          // Notify the parent component about the cart update\r\n          if (typeof onCartUpdate === \"function\") {\r\n            onCartUpdate(updatedItems);\r\n          }\r\n        } else {\r\n          console.error(\"Failed to add product to cart.\");\r\n        }\r\n      } else {\r\n        const createCartResponse = await fetch(\r\n          \"http://localhost:3000/api/v1/cart\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: `Bearer ${localStorage.token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        if (createCartResponse.ok) {\r\n          const newCartData = await createCartResponse.json();\r\n          const newCartId = newCartData.cart_id;\r\n\r\n          const addToNewCartResponse = await fetch(\r\n            `http://localhost:3000/api/v1/cartitem`,\r\n            {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${localStorage.token}`,\r\n              },\r\n              body: JSON.stringify({\r\n                cart_id: newCartId,\r\n                productid: productId,\r\n                user_id: userId,\r\n              }),\r\n            }\r\n          );\r\n\r\n          if (addToNewCartResponse.ok) {\r\n            console.log(\"Product added to cart successfully!\");\r\n\r\n            // Fetch updated cart items before updating the Cart component\r\n            const updatedItems = await fetchCartItems(setCartItems);\r\n\r\n            // Notify the parent component about the cart update\r\n            if (typeof onCartUpdate === \"function\") {\r\n              onCartUpdate(updatedItems);\r\n            }\r\n          } else {\r\n            console.error(\"Failed to add product to cart.\");\r\n          }\r\n        } else {\r\n          console.error(\"Failed to create or retrieve cart.\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding product to cart:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"item-list-container\">\r\n      <h2 className=\"products-header\">Products</h2>\r\n      <ul>\r\n        {items.map((item) => (\r\n          <li key={item.productid} className=\"item\">\r\n            <div>\r\n              <h3 className=\"item-name\">\r\n                {item.name} | {item.price}\r\n              </h3>\r\n              <p className=\"item-description\">{item.description}</p>\r\n              <button\r\n                onClick={() => handleAddToCart(item.productid, onCartUpdate)}\r\n              >\r\n                Add to Cart\r\n              </button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Cart\r\n        setCartItems={setCartItems}\r\n        onCartUpdate={(updatedItems) => setCartItems(updatedItems)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}