{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shade\\\\OneDrive\\\\Documents\\\\DevProject\\\\ecommerce-fullstack-app-master\\\\src\\\\frontend\\\\src\\\\components\\\\ProductList\\\\Item.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Cart, refreshCart, fetchCartItems } from \"../Cart/cart.js\";\nimport \"./item.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemList = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const updateCart = newCartItems => {\n    setCartItems(newCartItems);\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch products\n        const productsResponse = await fetch(`http://${process.env.HOST_NAME}/api/v1/products`);\n        const productsData = await productsResponse.json();\n        setItems(productsData);\n\n        // Fetch cart items\n        const cartItemsData = await fetchCartItems(setCartItems);\n        setCartItems(cartItemsData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAddToCart = async productId => {\n    console.log(\"Adding product to cart:\", productId);\n    try {\n      const userResponse = await fetch(`http://${process.env.HOST_NAME}/api/v1/auth/user-data`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: localStorage.token\n        }\n      });\n      if (!userResponse.ok) {\n        console.error(\"Failed to retrieve user information.\");\n        return;\n      }\n      const userData = await userResponse.json();\n      const userId = userData.id;\n      const checkCartResponse = await fetch(`http://${process.env.HOST_NAME}/api/v1/cart/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      });\n      if (checkCartResponse.ok) {\n        var _existingCartData$;\n        const existingCartData = await checkCartResponse.json();\n        const existingCartId = (_existingCartData$ = existingCartData[0]) === null || _existingCartData$ === void 0 ? void 0 : _existingCartData$.cart_id;\n        const addToCartResponse = await fetch(`http://${process.env.HOST_NAME}/api/v1/cartitem`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`\n          },\n          body: JSON.stringify({\n            cart_id: existingCartId,\n            productid: productId,\n            user_id: userId\n          })\n        });\n        if (addToCartResponse.ok) {\n          console.log(\"Product added to cart successfully!\");\n\n          // Refresh the cart in real-time\n          await refreshCart({\n            setCartItems\n          });\n        } else {\n          console.error(\"Failed to add product to cart.\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error adding product to cart:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"products-header\",\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"item-list\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"item-name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"item-price\",\n          children: [\"Price: $\", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"item-description\",\n          children: item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddToCart(item.productid),\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, item.productid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {\n      cartItems: cartItems,\n      setCartItems: setCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemList, \"AsueRV375l4qKKypklgcaK43Alk=\");\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","useState","useEffect","Cart","refreshCart","fetchCartItems","jsxDEV","_jsxDEV","ItemList","_s","items","setItems","cartItems","setCartItems","updateCart","newCartItems","fetchData","productsResponse","fetch","process","env","HOST_NAME","productsData","json","cartItemsData","error","console","handleAddToCart","productId","log","userResponse","method","headers","token","localStorage","ok","userData","userId","id","checkCartResponse","Authorization","_existingCartData$","existingCartData","existingCartId","cart_id","addToCartResponse","body","JSON","stringify","productid","user_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","price","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shade/OneDrive/Documents/DevProject/ecommerce-fullstack-app-master/src/frontend/src/components/ProductList/Item.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Cart, refreshCart, fetchCartItems } from \"../Cart/cart.js\";\nimport \"./item.css\";\n\nconst ItemList = () => {\n  const [items, setItems] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n\n  const updateCart = (newCartItems) => {\n    setCartItems(newCartItems);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch products\n        const productsResponse = await fetch(\n          `http://${process.env.HOST_NAME}/api/v1/products`\n        );\n        const productsData = await productsResponse.json();\n        setItems(productsData);\n\n        // Fetch cart items\n        const cartItemsData = await fetchCartItems(setCartItems);\n        setCartItems(cartItemsData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleAddToCart = async (productId) => {\n    console.log(\"Adding product to cart:\", productId);\n    try {\n      const userResponse = await fetch(\n        `http://${process.env.HOST_NAME}/api/v1/auth/user-data`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            token: localStorage.token,\n          },\n        }\n      );\n\n      if (!userResponse.ok) {\n        console.error(\"Failed to retrieve user information.\");\n        return;\n      }\n\n      const userData = await userResponse.json();\n      const userId = userData.id;\n\n      const checkCartResponse = await fetch(\n        `http://${process.env.HOST_NAME}/api/v1/cart/user/${userId}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`,\n          },\n        }\n      );\n\n      if (checkCartResponse.ok) {\n        const existingCartData = await checkCartResponse.json();\n        const existingCartId = existingCartData[0]?.cart_id;\n\n        const addToCartResponse = await fetch(\n          `http://${process.env.HOST_NAME}/api/v1/cartitem`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${localStorage.token}`,\n            },\n            body: JSON.stringify({\n              cart_id: existingCartId,\n              productid: productId,\n              user_id: userId,\n            }),\n          }\n        );\n\n        if (addToCartResponse.ok) {\n          console.log(\"Product added to cart successfully!\");\n\n          // Refresh the cart in real-time\n          await refreshCart({ setCartItems });\n        } else {\n          console.error(\"Failed to add product to cart.\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error adding product to cart:\", error);\n    }\n  };\n\n  return (\n    <div className=\"item-list-container\">\n      <h2 className=\"products-header\">Products</h2>\n      <ul className=\"item-list\">\n        {items.map((item) => (\n          <li key={item.productid} className=\"item\">\n            <h3 className=\"item-name\">{item.name}</h3>\n            <p className=\"item-price\">Price: ${item.price}</p>{\" \"}\n            {/* Clearly stating the price */}\n            <p className=\"item-description\">{item.description}</p>\n            <button onClick={() => handleAddToCart(item.productid)}>\n              Add to Cart\n            </button>\n          </li>\n        ))}\n      </ul>\n      {/* Cart component, if present */}\n      <Cart cartItems={cartItems} setCartItems={setCartItems} />\n    </div>\n  );\n};\n\nexport default ItemList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}