{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shade\\\\OneDrive\\\\Documents\\\\DevProject\\\\ecommerce-fullstack-app-master\\\\src\\\\frontend\\\\src\\\\components\\\\Cart\\\\cart.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./cart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const fetchCartItems = async setCartItems => {\n  console.log(\"Fetching cart items...\");\n  try {\n    const userResponse = await fetch(`https://${process.env.REACT_APP_HOST_NAME}/api/v1/auth/user-data`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        token: localStorage.token\n      }\n    });\n    if (!userResponse.ok) {\n      console.error(\"Failed to retrieve user information.\");\n      return;\n    }\n    const userData = await userResponse.json();\n    const userId = userData.id;\n    const cartResponse = await fetch(`https://${process.env.REACT_APP_HOST_NAME}/api/v1/cart/user/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    });\n    if (cartResponse.ok) {\n      const cartData = await cartResponse.json();\n      if (cartData.length > 0) {\n        const cartId = cartData[0].cart_id;\n        const cartItemsResponse = await fetch(`https://${process.env.REACT_APP_HOST_NAME}/api/v1/cartitem/${cartId}`);\n        if (cartItemsResponse.ok) {\n          const cartItemsData = await cartItemsResponse.json();\n          const quantityDict = {};\n          const updatedCartItems = [];\n          for (const cartItem of cartItemsData) {\n            if (!quantityDict[cartItem.productid]) {\n              const productResponse = await fetch(`https://${process.env.HOST_NAME}/api/v1/products/${cartItem.productid}`);\n              if (productResponse.ok) {\n                const productData = await productResponse.json();\n                const productidCount = cartItemsData.filter(item => item.productid === cartItem.productid).length;\n                updatedCartItems.push({\n                  ...cartItem,\n                  name: productData[0].name,\n                  price: productData[0].price * productidCount,\n                  quantity: productidCount\n                });\n                quantityDict[cartItem.productid] = true;\n              } else {\n                console.error(`Failed to fetch product details for product ID ${cartItem.productid}.`);\n              }\n            }\n          }\n          console.log(\"Updated cart items:\", updatedCartItems);\n\n          // Ensure that setCartItems updates the state\n          setCartItems(updatedCartItems);\n          return Promise.resolve(updatedCartItems);\n        } else {\n          console.error(\"Failed to fetch cart items.\", cartItemsResponse.statusText);\n          return Promise.reject(\"Failed to fetch cart items\");\n        }\n      } else {\n        const createCartResponse = await fetch(`https://${process.env.HOST_NAME}/api/v1/cart/${userId}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`\n          },\n          body: JSON.stringify({\n            user_id: userId\n          })\n        });\n        if (createCartResponse.ok) {\n          const newCartData = await createCartResponse.json();\n          const newCartId = newCartData.cart_id;\n          const newCartItemsResponse = await fetch(`https://${process.env.HOST_NAME}/api/v1/cartitem/${newCartId}`);\n          if (newCartItemsResponse.ok) {\n            const newCartItemsData = await newCartItemsResponse.json();\n            if (newCartItemsData.length > 0) {\n              setCartItems(newCartItemsData);\n              console.log(\"New cart items set:\", newCartItemsData);\n            } else {\n              console.log(\"No cart items found for the new cart.\");\n            }\n            return Promise.resolve(newCartItemsData);\n          } else {\n            console.error(\"Failed to fetch cart items for the new cart.\", newCartItemsResponse.statusText);\n            return Promise.reject(\"Failed to fetch cart items\");\n          }\n        } else {\n          console.error(\"Failed to create or retrieve cart for the user.\");\n          return Promise.reject(\"Failed to create or retrieve cart\");\n        }\n      }\n    } else {\n      console.error(\"Failed to fetch user cart information.\", cartResponse.statusText);\n      return Promise.reject(\"Failed to fetch user cart information\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching cart:\", error);\n    return Promise.reject(\"Error fetching cart\");\n  }\n};\nexport const refreshCart = async ({\n  setCartItems\n}) => {\n  console.log(\"Refreshing cart...\");\n  try {\n    await fetchCartItems(setCartItems);\n  } catch (error) {\n    console.error(\"Error refreshing cart:\", error);\n  }\n};\nexport const Cart = ({\n  cartItems,\n  setCartItems\n}) => {\n  const calculateTotal = () => {\n    if (!cartItems || !Array.isArray(cartItems)) {\n      return 0;\n    }\n    const productQuantities = {};\n    cartItems.forEach(cartItem => {\n      const {\n        productid\n      } = cartItem;\n      productQuantities[productid] = (productQuantities[productid] || 0) + 1;\n    });\n    const total = Object.keys(productQuantities).reduce((acc, productid) => {\n      const quantity = productQuantities[productid];\n      const product = cartItems.find(item => item.productid === parseInt(productid));\n      if (product) {\n        return acc + quantity * product.price;\n      }\n      return acc;\n    }, 0);\n    console.log(\"Total after calculation:\", total);\n    return total;\n  };\n  const handleRemoveItem = async cartItemId => {\n    try {\n      // Send a request to delete the item by cartitem_id\n      const response = await fetch(`https://${process.env.REACT_APP_HOST_NAME}/api/v1/cartitem/${cartItemId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`\n        }\n      });\n      if (response.ok) {\n        console.log(`Successfully removed item with ID ${cartItemId}`);\n\n        // Fetch the updated cart items\n        const updatedCartItems = await fetchCartItems(setCartItems);\n\n        // Update the cart items state with the fetched data\n        setCartItems(updatedCartItems);\n      } else {\n        console.error(`Failed to remove item with ID ${cartItemId}`);\n      }\n    } catch (error) {\n      console.error(\"Error removing item:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"cart-header\",\n      children: \"Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cart-list\",\n      children: cartItems && Array.isArray(cartItems) && cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item-name\",\n        children: [cartItem.quantity, \" x \", cartItem.name, \" - $\", cartItem.price.toFixed(2), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveItem(cartItem.cartitem_id),\n          className: \"remove-button\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)]\n      }, cartItem.cartitem_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"total\",\n      children: [\"Total: $\", calculateTotal().toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_c = Cart;\nconst arraysEqual = (arr1, arr2) => {\n  if (arr1.length !== arr2.length) return false;\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) return false;\n  }\n  return true;\n};\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fetchCartItems","setCartItems","console","log","userResponse","fetch","process","env","REACT_APP_HOST_NAME","method","headers","token","localStorage","ok","error","userData","json","userId","id","cartResponse","Authorization","cartData","length","cartId","cart_id","cartItemsResponse","cartItemsData","quantityDict","updatedCartItems","cartItem","productid","productResponse","HOST_NAME","productData","productidCount","filter","item","push","name","price","quantity","Promise","resolve","statusText","reject","createCartResponse","body","JSON","stringify","user_id","newCartData","newCartId","newCartItemsResponse","newCartItemsData","refreshCart","Cart","cartItems","calculateTotal","Array","isArray","productQuantities","forEach","total","Object","keys","reduce","acc","product","find","parseInt","handleRemoveItem","cartItemId","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","toFixed","onClick","cartitem_id","_c","arraysEqual","arr1","arr2","i","$RefreshReg$"],"sources":["C:/Users/shade/OneDrive/Documents/DevProject/ecommerce-fullstack-app-master/src/frontend/src/components/Cart/cart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./cart.css\";\n\nexport const fetchCartItems = async (setCartItems) => {\n  console.log(\"Fetching cart items...\");\n\n  try {\n    const userResponse = await fetch(\n      `https://${process.env.REACT_APP_HOST_NAME}/api/v1/auth/user-data`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: localStorage.token,\n        },\n      }\n    );\n\n    if (!userResponse.ok) {\n      console.error(\"Failed to retrieve user information.\");\n      return;\n    }\n\n    const userData = await userResponse.json();\n    const userId = userData.id;\n\n    const cartResponse = await fetch(\n      `https://${process.env.REACT_APP_HOST_NAME}/api/v1/cart/user/${userId}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.token}`,\n        },\n      }\n    );\n\n    if (cartResponse.ok) {\n      const cartData = await cartResponse.json();\n\n      if (cartData.length > 0) {\n        const cartId = cartData[0].cart_id;\n\n        const cartItemsResponse = await fetch(\n          `https://${process.env.REACT_APP_HOST_NAME}/api/v1/cartitem/${cartId}`\n        );\n\n        if (cartItemsResponse.ok) {\n          const cartItemsData = await cartItemsResponse.json();\n\n          const quantityDict = {};\n          const updatedCartItems = [];\n\n          for (const cartItem of cartItemsData) {\n            if (!quantityDict[cartItem.productid]) {\n              const productResponse = await fetch(\n                `https://${process.env.HOST_NAME}/api/v1/products/${cartItem.productid}`\n              );\n\n              if (productResponse.ok) {\n                const productData = await productResponse.json();\n                const productidCount = cartItemsData.filter(\n                  (item) => item.productid === cartItem.productid\n                ).length;\n\n                updatedCartItems.push({\n                  ...cartItem,\n                  name: productData[0].name,\n                  price: productData[0].price * productidCount,\n                  quantity: productidCount,\n                });\n\n                quantityDict[cartItem.productid] = true;\n              } else {\n                console.error(\n                  `Failed to fetch product details for product ID ${cartItem.productid}.`\n                );\n              }\n            }\n          }\n\n          console.log(\"Updated cart items:\", updatedCartItems);\n\n          // Ensure that setCartItems updates the state\n          setCartItems(updatedCartItems);\n\n          return Promise.resolve(updatedCartItems);\n        } else {\n          console.error(\n            \"Failed to fetch cart items.\",\n            cartItemsResponse.statusText\n          );\n          return Promise.reject(\"Failed to fetch cart items\");\n        }\n      } else {\n        const createCartResponse = await fetch(\n          `https://${process.env.HOST_NAME}/api/v1/cart/${userId}`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${localStorage.token}`,\n            },\n            body: JSON.stringify({\n              user_id: userId,\n            }),\n          }\n        );\n\n        if (createCartResponse.ok) {\n          const newCartData = await createCartResponse.json();\n          const newCartId = newCartData.cart_id;\n\n          const newCartItemsResponse = await fetch(\n            `https://${process.env.HOST_NAME}/api/v1/cartitem/${newCartId}`\n          );\n\n          if (newCartItemsResponse.ok) {\n            const newCartItemsData = await newCartItemsResponse.json();\n\n            if (newCartItemsData.length > 0) {\n              setCartItems(newCartItemsData);\n              console.log(\"New cart items set:\", newCartItemsData);\n            } else {\n              console.log(\"No cart items found for the new cart.\");\n            }\n\n            return Promise.resolve(newCartItemsData);\n          } else {\n            console.error(\n              \"Failed to fetch cart items for the new cart.\",\n              newCartItemsResponse.statusText\n            );\n            return Promise.reject(\"Failed to fetch cart items\");\n          }\n        } else {\n          console.error(\"Failed to create or retrieve cart for the user.\");\n          return Promise.reject(\"Failed to create or retrieve cart\");\n        }\n      }\n    } else {\n      console.error(\n        \"Failed to fetch user cart information.\",\n        cartResponse.statusText\n      );\n      return Promise.reject(\"Failed to fetch user cart information\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching cart:\", error);\n    return Promise.reject(\"Error fetching cart\");\n  }\n};\n\nexport const refreshCart = async ({ setCartItems }) => {\n  console.log(\"Refreshing cart...\");\n  try {\n    await fetchCartItems(setCartItems);\n  } catch (error) {\n    console.error(\"Error refreshing cart:\", error);\n  }\n};\n\nexport const Cart = ({ cartItems, setCartItems }) => {\n  const calculateTotal = () => {\n    if (!cartItems || !Array.isArray(cartItems)) {\n      return 0;\n    }\n\n    const productQuantities = {};\n\n    cartItems.forEach((cartItem) => {\n      const { productid } = cartItem;\n      productQuantities[productid] = (productQuantities[productid] || 0) + 1;\n    });\n\n    const total = Object.keys(productQuantities).reduce((acc, productid) => {\n      const quantity = productQuantities[productid];\n      const product = cartItems.find(\n        (item) => item.productid === parseInt(productid)\n      );\n\n      if (product) {\n        return acc + quantity * product.price;\n      }\n      return acc;\n    }, 0);\n\n    console.log(\"Total after calculation:\", total);\n\n    return total;\n  };\n\n  const handleRemoveItem = async (cartItemId) => {\n    try {\n      // Send a request to delete the item by cartitem_id\n      const response = await fetch(\n        `https://${process.env.REACT_APP_HOST_NAME}/api/v1/cartitem/${cartItemId}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.token}`,\n          },\n        }\n      );\n\n      if (response.ok) {\n        console.log(`Successfully removed item with ID ${cartItemId}`);\n\n        // Fetch the updated cart items\n        const updatedCartItems = await fetchCartItems(setCartItems);\n\n        // Update the cart items state with the fetched data\n        setCartItems(updatedCartItems);\n      } else {\n        console.error(`Failed to remove item with ID ${cartItemId}`);\n      }\n    } catch (error) {\n      console.error(\"Error removing item:\", error);\n    }\n  };\n\n  return (\n    <div className=\"cart-wrapper\">\n      <h2 className=\"cart-header\">Shopping Cart</h2>\n      <ul className=\"cart-list\">\n        {cartItems &&\n          Array.isArray(cartItems) &&\n          cartItems.map((cartItem) => (\n            <li className=\"item-name\" key={cartItem.cartitem_id}>\n              {cartItem.quantity} x {cartItem.name} - $\n              {cartItem.price.toFixed(2)}\n              <button\n                onClick={() => handleRemoveItem(cartItem.cartitem_id)}\n                className=\"remove-button\"\n              >\n                Remove\n              </button>\n            </li>\n          ))}\n      </ul>\n      <p className=\"total\">Total: ${calculateTotal().toFixed(2)}</p>\n    </div>\n  );\n};\n\nconst arraysEqual = (arr1, arr2) => {\n  if (arr1.length !== arr2.length) return false;\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) return false;\n  }\n  return true;\n};\n\nexport default Cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}